@model WsRaisedHandsModern.Api.ViewModels.CreateUserViewModel

@{
    ViewData["Title"] = "Create User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1><i class="bi bi-person-plus"></i> Create New User</h1>
                <div>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-circle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Create" method="post" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <div class="row">
                    <!-- Personal Information Card -->
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0"><i class="bi bi-person"></i> Personal Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label asp-for="FirstName" class="form-label"></label>
                                    <input asp-for="FirstName" class="form-control" placeholder="Enter first name" />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="LastName" class="form-label"></label>
                                    <input asp-for="LastName" class="form-control" placeholder="Enter last name" />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="PhoneNumber" class="form-label"></label>
                                    <input asp-for="PhoneNumber" class="form-control" placeholder="Enter phone number (optional)" />
                                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Account Information Card -->
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-header bg-info text-white">
                                <h5 class="mb-0"><i class="bi bi-envelope"></i> Account Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label asp-for="Email" class="form-label"></label>
                                    <input asp-for="Email" class="form-control" placeholder="Enter email address" />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                    <div class="form-text">This will be used for login and notifications.</div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="UserName" class="form-label"></label>
                                    <input asp-for="UserName" class="form-control" placeholder="Enter username" />
                                    <span asp-validation-for="UserName" class="text-danger"></span>
                                    <div class="form-text">Username must be unique and can be used for login.</div>
                                </div>

                                <div class="form-check">
                                    <input asp-for="SendWelcomeEmail" class="form-check-input" />
                                    <label asp-for="SendWelcomeEmail" class="form-check-label"></label>
                                    <div class="form-text">Send account details and login instructions to the user.</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Password Card -->
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-header bg-danger text-white">
                                <h5 class="mb-0"><i class="bi bi-key"></i> Password Settings</h5>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle"></i>
                                    <strong>Password Requirements:</strong> Minimum 6 characters, at least one uppercase letter, one lowercase letter, and one number.
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Password" class="form-label"></label>
                                    <div class="input-group">
                                        <input asp-for="Password" class="form-control" type="password" autocomplete="new-password" />
                                        <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('Password')">
                                            <i class="bi bi-eye" id="Password-icon"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="Password" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ConfirmPassword" class="form-label"></label>
                                    <div class="input-group">
                                        <input asp-for="ConfirmPassword" class="form-control" type="password" autocomplete="new-password" />
                                        <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmPassword')">
                                            <i class="bi bi-eye" id="ConfirmPassword-icon"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                </div>

                                <div class="d-grid">
                                    <button type="button" class="btn btn-outline-primary" onclick="generatePassword()">
                                        <i class="bi bi-shuffle"></i> Generate Secure Password
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Security Settings Card -->
                    <div class="col-md-6 mb-4">
                        <div class="card">
                            <div class="card-header bg-success text-white">
                                <h5 class="mb-0"><i class="bi bi-shield-check"></i> Security Settings</h5>
                            </div>
                            <div class="card-body">
                                <div class="form-check mb-3">
                                    <input asp-for="EmailConfirmed" class="form-check-input" />
                                    <label asp-for="EmailConfirmed" class="form-check-label"></label>
                                    <div class="form-text">Check to mark email as confirmed (recommended for admin-created accounts).</div>
                                </div>

                                <div class="form-check mb-3">
                                    <input asp-for="PhoneNumberConfirmed" class="form-check-input" />
                                    <label asp-for="PhoneNumberConfirmed" class="form-check-label"></label>
                                </div>

                                <div class="form-check mb-3">
                                    <input asp-for="TwoFactorEnabled" class="form-check-input" />
                                    <label asp-for="TwoFactorEnabled" class="form-check-label"></label>
                                    <div class="form-text">User can enable this later in their profile.</div>
                                </div>

                                <div class="form-check">
                                    <input asp-for="LockoutEnabled" class="form-check-input" />
                                    <label asp-for="LockoutEnabled" class="form-check-label"></label>
                                    <div class="form-text">Allow account to be locked after failed login attempts.</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Role Management Card -->
                    <div class="col-md-12 mb-4">
                        <div class="card">
                            <div class="card-header bg-secondary text-white">
                                <h5 class="mb-0"><i class="bi bi-people"></i> Role Assignment</h5>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle"></i>
                                    <strong>Note:</strong> If no roles are selected, the user will be assigned the default "Member" role.
                                </div>

                                <div class="row">
                                    @if (Model.AvailableRoles.Any())
                                    {
                                        @for (int i = 0; i < Model.AvailableRoles.Count; i++)
                                        {
                                            <div class="col-md-4 col-lg-3 mb-2">
                                                <div class="form-check">
                                                    <input type="checkbox" 
                                                           name="SelectedRoles" 
                                                           value="@Model.AvailableRoles[i]" 
                                                           class="form-check-input" 
                                                           id="role_@i" />
                                                    <label class="form-check-label" for="role_@i">
                                                        <span class="badge bg-primary">@Model.AvailableRoles[i]</span>
                                                    </label>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="col-12">
                                            <div class="alert alert-info">
                                                <i class="bi bi-info-circle"></i> No roles are currently available. Please create roles first.
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <button type="submit" class="btn btn-success btn-lg">
                                            <i class="bi bi-check-circle"></i> Create User
                                        </button>
                                        <a asp-action="Index" class="btn btn-secondary btn-lg">
                                            <i class="bi bi-x-circle"></i> Cancel
                                        </a>
                                    </div>
                                    <div>
                                        <button type="button" class="btn btn-outline-warning" onclick="resetForm()">
                                            <i class="bi bi-arrow-clockwise"></i> Reset Form
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

      function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');
            
            if (field && icon) {
                if (field.type === 'password') {
                    field.type = 'text';
                    icon.classList.remove('bi-eye');
                    icon.classList.add('bi-eye-slash');
                } else {
                    field.type = 'password';
                    icon.classList.remove('bi-eye-slash');
                    icon.classList.add('bi-eye');
                }
            }
        }

        function generatePassword() {
            const upperCase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            const lowerCase = 'abcdefghijklmnopqrstuvwxyz';
            const numbers = '0123456789';
            const specials = '!#$%^&*';
            const allChars = upperCase + lowerCase + numbers + specials;
            
            let password = '';
            
            // Ensure at least one of each required character type
            password += upperCase[Math.floor(Math.random() * upperCase.length)];
            password += lowerCase[Math.floor(Math.random() * lowerCase.length)];
            password += numbers[Math.floor(Math.random() * numbers.length)];
            password += specials[Math.floor(Math.random() * specials.length)];
            
            // Fill remaining length to make it 12 characters
            for (let i = 4; i < 12; i++) {
                password += allChars[Math.floor(Math.random() * allChars.length)];
            }
            
            // Shuffle the password
            password = password.split('').sort(function() { return 0.5 - Math.random(); }).join('');
            
            // Set the password fields
            const passwordField = document.getElementById('Password');
            const confirmPasswordField = document.getElementById('ConfirmPassword');
            
            if (passwordField && confirmPasswordField) {
                passwordField.value = password;
                confirmPasswordField.value = password;
                
                // Show password temporarily
                passwordField.type = 'text';
                confirmPasswordField.type = 'text';
                
                // Hide after 3 seconds
                setTimeout(function() {
                    passwordField.type = 'password';
                    confirmPasswordField.type = 'password';
                }, 3000);
                
                alert('Password generated and set! It will be hidden in 3 seconds.');
            }
        }

        function resetForm() {
            if (confirm('Are you sure you want to reset the form? All entered data will be lost.')) {
                const form = document.querySelector('form');
                if (form) {
                    form.reset();
                    
                    // Reset checkboxes to their default values
                    const emailConfirmed = document.getElementById('EmailConfirmed');
                    const sendWelcome = document.getElementById('SendWelcomeEmail');
                    
                    if (emailConfirmed) emailConfirmed.checked = true;
                    if (sendWelcome) sendWelcome.checked = true;
                }
            }
        }

        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-populate username from email
            const emailField = document.getElementById('Email');
            if (emailField) {
                emailField.addEventListener('blur', function() {
                    const email = this.value;
                    const usernameField = document.getElementById('UserName');
                    if (email && usernameField && !usernameField.value) {
                        const atIndex = email.indexOf('@@');
                        if (atIndex > 0) {
                            const username = email.substring(0, atIndex);
                            usernameField.value = username;
                        }
                    }
                });
            }
        });


    </script>
    
}

